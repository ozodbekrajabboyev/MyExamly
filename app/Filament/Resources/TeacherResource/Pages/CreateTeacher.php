<?php

namespace App\Filament\Resources\TeacherResource\Pages;

use App\Filament\Resources\TeacherResource;
use App\Mail\LoginPasswordSend;
use App\Models\Role;
use App\Models\User;
use Filament\Actions;
use Filament\Notifications\Notification;
use Filament\Resources\Pages\CreateRecord;
use Illuminate\Contracts\Support\Htmlable;
use Illuminate\Support\Facades\Hash;
use Illuminate\Support\Facades\Mail;

class CreateTeacher extends CreateRecord
{
    protected static string $resource = TeacherResource::class;
    public function getTitle(): string|Htmlable
    {
        return "Yangi o'qituvchi qo'shish"; // TODO: Change the autogenerated stub
    }

    public function generateSecurePassword($length = 16):string
    {
        $chars = 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789!@#$%^&*()_-=+;:,.?';
        $password = '';
        $charLength = strlen($chars) - 1;

        for ($i = 0; $i < $length; $i++) {
            $password .= $chars[random_int(0, $charLength)];
        }

        return $password;
    }

    protected function mutateFormDataBeforeCreate(array $data): array
    {
        // Check if email already exists
        if (User::where('email', $data['email'])->exists()) {
            $this->addError('data.email', 'Bu elektron pochta manzili allaqachon mavjud.');
            $this->halt();
        }

        $password = $this->generateSecurePassword(12);

        $user = User::create([
            'name' => $data['full_name'],
            'maktab_id' => $data['maktab_id'],
            'email' => $data['email'],
            'password' => Hash::make($password),
            'role_id' => Role::where('name', 'teacher')->value('id'),
        ]);

        $data['user_id'] = $user->id;

        $recipient = auth()->user();

        Mail::to($data['email'])->queue(new LoginPasswordSend($data['email'], $password));

        Notification::make()
            ->title("Kirish ma'lumotlaringiz tayyor!")
            ->color('green')
            ->body("Elektron pochta manzili: {$data['email']}\nParol: {$password}")
            ->sendToDatabase($recipient);

        session()->flash('generated_password', $password);

        unset($data['email']);
        return $data;
    }


    protected function getRedirectUrl(): string
    {
        return '/teachers';
    }
}
